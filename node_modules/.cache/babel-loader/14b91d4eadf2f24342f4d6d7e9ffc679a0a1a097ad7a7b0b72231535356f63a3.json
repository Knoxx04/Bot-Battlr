{"ast":null,"code":"var _jsxFileName = \"/home/lennox/Development/code/phase2/Bot-Battlr/bot-battlr/src/components/App/App.js\",\n  _s = $RefreshSig$();\nimport BotCollection from '../Bots/BotCollection';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport YourBotArmy from '../Bots/YourBotArmy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOT_URL = \"\";\nfunction App() {\n  _s();\n  const [allbots, setAllBots] = useState([]);\n  const [yourBot, setYourBot] = useState([]);\n  useEffect(() => {\n    fetch(BOT_URL).then(response => response.json()).then(data => {\n      setAllBots(data.bots);\n    });\n  }, []);\n  function addBot(bot) {\n    if (!yourBot.find(bots => bots.id === bot.id)) {\n      setYourBot([...yourBot, bot]);\n    }\n  }\n  function retireBot(bot) {\n    const newBot = yourBot.filter(delbot => delbot.id !== bot.id);\n    setYourBot(newBot);\n  }\n  function handleClick(bot) {\n    fetch(`BOT_URL${bot.id}`, {\n      method: 'DELETE'\n    }).then(() => {\n      setAllBots(allbots => allbots.filter(bt => bt.id !== bot.id));\n      setYourBot(yourBot => yourBot.filter(x => x.id !== bot.id));\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: /*#__PURE__*/_jsxDEV(YourBotArmy, {\n        props: yourBot,\n        retireBot: retireBot,\n        handleClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: /*#__PURE__*/_jsxDEV(BotCollection, {\n        props: allbots,\n        addBot: addBot,\n        handleClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K5RTMLr4dVuKUoSL1emVBUKil/E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BotCollection","useState","useEffect","YourBotArmy","BOT_URL","App","allbots","setAllBots","yourBot","setYourBot","fetch","then","response","json","data","bots","addBot","bot","find","id","retireBot","newBot","filter","delbot","handleClick","method","bt","x"],"sources":["/home/lennox/Development/code/phase2/Bot-Battlr/bot-battlr/src/components/App/App.js"],"sourcesContent":["import BotCollection from '../Bots/BotCollection';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport YourBotArmy from '../Bots/YourBotArmy';\n\nconst BOT_URL = \"\"\n\nfunction App() {\n\n  const [allbots, setAllBots] = useState([])\n  const [yourBot, setYourBot] = useState([])\n\n  useEffect(() => {\n      fetch(BOT_URL)\n      .then((response) => response.json())\n      .then((data) => {\n          setAllBots(data.bots)\n      })\n  }, [])\n\n  function addBot(bot) {\n  \n    if(!yourBot.find(bots => bots.id === bot.id)) {\n    setYourBot([...yourBot, bot])\n    }\n  }\n\n  function retireBot(bot) {\n    const newBot = yourBot.filter(delbot => delbot.id !== bot.id)\n    setYourBot(newBot)\n    \n  }\n\n  function handleClick(bot) {\n    fetch(`BOT_URL${bot.id}`, {\n      method: 'DELETE',\n    }).then(() => {\n      setAllBots((allbots) => allbots.filter((bt) => bt.id !== bot.id))\n      setYourBot((yourBot) => yourBot.filter((x) => x.id !== bot.id))\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <div className='top'>\n        <YourBotArmy props={yourBot} retireBot={retireBot} handleClick={handleClick}/>\n      </div>\n      <div className='bottom'>\n        <BotCollection props={allbots} addBot={addBot} handleClick={handleClick}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,aAAa,MAAM,uBAAuB;AACjD,OAAO,WAAW;AAClB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,qBAAqB;AAAC;AAE9C,MAAMC,OAAO,GAAG,EAAE;AAElB,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZQ,KAAK,CAACN,OAAO,CAAC,CACbO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACZP,UAAU,CAACO,IAAI,CAACC,IAAI,CAAC;IACzB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,MAAM,CAACC,GAAG,EAAE;IAEnB,IAAG,CAACT,OAAO,CAACU,IAAI,CAACH,IAAI,IAAIA,IAAI,CAACI,EAAE,KAAKF,GAAG,CAACE,EAAE,CAAC,EAAE;MAC9CV,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAES,GAAG,CAAC,CAAC;IAC7B;EACF;EAEA,SAASG,SAAS,CAACH,GAAG,EAAE;IACtB,MAAMI,MAAM,GAAGb,OAAO,CAACc,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACJ,EAAE,KAAKF,GAAG,CAACE,EAAE,CAAC;IAC7DV,UAAU,CAACY,MAAM,CAAC;EAEpB;EAEA,SAASG,WAAW,CAACP,GAAG,EAAE;IACxBP,KAAK,CAAE,UAASO,GAAG,CAACE,EAAG,EAAC,EAAE;MACxBM,MAAM,EAAE;IACV,CAAC,CAAC,CAACd,IAAI,CAAC,MAAM;MACZJ,UAAU,CAAED,OAAO,IAAKA,OAAO,CAACgB,MAAM,CAAEI,EAAE,IAAKA,EAAE,CAACP,EAAE,KAAKF,GAAG,CAACE,EAAE,CAAC,CAAC;MACjEV,UAAU,CAAED,OAAO,IAAKA,OAAO,CAACc,MAAM,CAAEK,CAAC,IAAKA,CAAC,CAACR,EAAE,KAAKF,GAAG,CAACE,EAAE,CAAC,CAAC;IACjE,CAAC,CAAC;EACJ;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAK,SAAS,EAAC,KAAK;MAAA,uBAClB,QAAC,WAAW;QAAC,KAAK,EAAEX,OAAQ;QAAC,SAAS,EAAEY,SAAU;QAAC,WAAW,EAAEI;MAAY;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAC1E,eACN;MAAK,SAAS,EAAC,QAAQ;MAAA,uBACrB,QAAC,aAAa;QAAC,KAAK,EAAElB,OAAQ;QAAC,MAAM,EAAEU,MAAO;QAAC,WAAW,EAAEQ;MAAY;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACtE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA7CQnB,GAAG;AAAA,KAAHA,GAAG;AA+CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}